DROP TABLE IF EXISTS Aktivity;
DROP TABLE IF EXISTS Bewertung;
DROP TABLE IF EXISTS BietetAn;
DROP TABLE IF EXISTS Buchung;
DROP TABLE IF EXISTS Reise;
DROP TABLE IF EXISTS Unternehmen;
DROP TABLE IF EXISTS Urlaubsprofile;
DROP TABLE IF EXISTS User;

CREATE TABLE User(
    Usernr INT(10) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Password VARCHAR(30) NOT NULL,
    Geburtsdat DATE NOT NULL,
    Vorname VARCHAR(20) NOT NULL,
    Nachname VARCHAR(20) NOT NULL,
    Rolle Integer(1) NOT NULL,
    Kontonr INT(10) UNSIGNED NOT NULL,
    UNIQUE KEY index_name (Vorname,Nachname)
);
CREATE TABLE Unternehmen(
    Kontonr INT(10) UNSIGNED NOT NULL,
    Unternehmenid INT(10) UNSIGNED AUTO_INCREMENT PRIMARY KEY 
);
CREATE TABLE Reise(
    Reisenr INT(10) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Beschreibung TEXT NOT NULL,
    Ort VARCHAR(20) NOT NULL,
    Region VARCHAR(20) NOT NULL,
    Land VARCHAR(20) NOT NULL,
    Preis DOUBLE(10,2) NOT NULL,
    Jahreszeit VARCHAR(10) NOT NULL,
    Unternehmenid INT(10) REFERENCES Unternehmen(UnternehmenID)
);
CREATE TABLE Buchung(
    Buchungid INT(10) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Usernr INT(10) REFERENCES User(UserNr),
    Reisenr INT(10) REFERENCES Reise(ReiseNr),
    Kosten DOUBLE(10,2) NOT NULL,
    Von Date NOT NULL,
    Bis Date NOT NULL
);
CREATE TABLE Aktivity(
    Anr INT(10) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Jahreszeit VARCHAR(10) NOT NULL,
    Beschreibung TEXT NOT NULL,
    Kosten DOUBLE(10,2) NOT NULL, 
    Alternativ INT(10) REFERENCES Aktivity(ANr),
    Unternehmenid INT(10) REFERENCES Unternehmen(UnternehmenID)
);
CREATE TABLE Urlaubsprofile(
    Profilnr INT(10) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Usernr INT(10) REFERENCES User(UserNr),
    Reisenr INT(10) REFERENCES Reise(ReiseNr),
    Name VARCHAR(20) NOT NULL
);
CREATE TABLE BietetAn(
    Bnr INT(10) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Reisenr INT(10) REFERENCES Reise(ReiseNr),
    Anr INT(10) REFERENCES Aktivity(ANr)
);
CREATE TABLE Bewertung(
    Bewertungnr INT(10) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Usernr INT(10) REFERENCES User(UserNr),
    Anr INT(10) REFERENCES Aktivity(ANr),
    Bewertung TEXT NOT NULL,
    Note Double(1,1) NOT NULL
);